1.	Introduction

1.1.	 Purpose (Devyn) (Adam: Review) (Chris: Final Review)

1.1.1.	Delineate the purpose of the SRS
The purpose of the SRS is to set forth a specification for the Testing Center Software.  The old system is antiquated and now needs to be replaced.
1.1.2.	Specify the intended audience
The audience is Kevin Twitchell as the Software Engineering professor as well as the Testing Center Administration.
1.2.	 Scope (Devyn) (Adam: Review)

1.2.1.	Identify Software to be produced by name
The software suite we will be producing will be called Automated Testing Service (ATS)
1.2.2.	Explain what the software product will and will not do
ATS will facilitate the entry of and distribution of tests.  This will consist of:
-Faculty entry of tests
-Manage test dates, availability, and closing times
-Retrieve student data from Jenzabar
-Student check-in
-Distribution and completion of tests
-Grading of tests and display of those grades in a manner consistent with FERPA
-Entry of grades into the BYU-I iLearn gradebook
ATS will not:
-Grade write on (electronic or handwritten) short answer questions.
1.2.3.	Application of the software

1.2.3.1.	Relevant benefits, Objectives, and Goals 
The current software is antiquated and fractured.  It is not sufficient to provide the flexibility and 
maintainability required.  ATS will allow for scaling to larger distribution of testing services.  ATS will simplify the entry process and improve the faculty experience when entering tests.

1.3.	 Definitions, Acronyms and Abbreviations (All)
ATS - Automated Testing Service, the software suite we will develop
ADA - Disabilities Compliance (explain more)
SRS - Software Requirements Specification
FERPA – The Family Educational Rights and Privacy Act of 1974.
I-Number – A unique nine digit identification number for students
I-Learn - A web based learning management system for teachers and students
Scantron - A device able to grade bubble tests
Jenzabar - BYU-Idaho’s main database for student’s private information, I-Learn information, and class information.
BYU-I - Brigham Young University - Idaho
Testing Center or TC - The physical building/location of the center for testing.

1.4.	 References (All)
FERPA - http://www.byui.edu/student-records/ferpa/family-education-rights-and-privacy-act-%28ferpa%29
Testing Center - http://www.byui.edu/testing-services
I-Learn API - Also known as Agilix - http://gls.agilix.com/js/docs/#!/concept/overview
Jenzabar API - http://www.franciscan.edu/imagebase/oit/docid1510/Web%20Administration%20Configuration%20Guide.pdf

1.5.	 Overview (Adam)
This document gives an overview of the functionality of ATS. It describes the requirements needed for the development process. 

1.5.1.	What the rest of the SRS contains?
The next chapter, Overall Description section, gives an overview of the product. Which establishes a context for the technical requirements which are noted in section 3, Requirement Specifications. Section 3, Requirements Specifications, is written to explain the details of the functionality of this product. Both sections are written to describe the Testing Center Software in its entirety.

1.5.2.	How the SRS is organized?
This document is organized by explaining the overall description of the software, 
more specifically the system interfaces, the user interfaces,
hardware interfaces, software interfaces, and communication interfaces.
Product Perspective
  Product Functions
  User Characteristics
  Constraints
Specific Requirements
  External interfaces
  Functions
  Performance requirements
  
  
2.	Overall description

2.1.	 Product Perspective
In this section we give an overview of the Automated Testing System (ATS). This includes its interfaces, constraints, and assumptions.

2.1.1.	System interfaces
The testing center system shall interface with existing school systems including I-Learn and Jenzabar. The system shall interface with I-Learn to enable teachers to edit and upload test scores. It shall also allow the students to view their test scores. Within ATS the teacher will be able to hide or show student scores. The system shall interface with Jenzabar to retrieve existing student data, including the I-Number, name, date of birth, class schedule, and picture. This data will be used for various verifications and system logins as explained in Section 3 of this document. ATS shall provide interfaces for mobile and desktop applications in order to provide scalability and allow for future growth. See Section 3.1 for further information.

2.1.2.	User interfaces
ATS shall inform the user of any errors within the system. Persons using computers for testing shall only have access to their test through ATS. There shall be a user interface for employees to check-in and check-out electronic/paper tests. There shall be a user interface for teachers to input tests, schedule tests, and make student grades available to the student interface. There shall be a user interface for students to view their own test results.

2.1.3.	Hardware interfaces
ATS will interface with existing display monitors in the testing center. The existing Testing Center monitors are at the front of the Testing Center in the entry way and at the Testing Center exit. ATS will also offer a secure connection to employee computers in the Testing Center or in a satellite office to the Testing Center. Each employee computer in the check-in area will have a number pad accessible to students who will enter their I-Number as part of the check-in process. ATS shall interface with a printer for printing documents. ATS shall also interface with the current Scantron device that translates paper tests to an electronic form. This interface must be scalable, allowing for one or more printers or Scantron devices. ATS must be able to identify paper tests.

2.1.4.	Software interfaces
ATS shall be compatible with client systems running current versions of Windows. The software shall be written in a programming language taught at BYU-I's Computer Science or CIT departments. This enables maintenance to be performed by BYU-I's graduates, students, or other professionals. ATS shall use a math engine to understand math symbols, make them printable, and allow students to add them to their tests.

2.1.5.	Communication interfaces
HTML content shall be compatible with Firefox, Chrome, and IE 9+ per University standards. (TODO: Confirm these are actual standards).

2.1.6.	Memory constraints
N/A

2.1.7.	Operations
The system shall have a period of inactivity for scheduled maintenance and backups when the testing center is closed. No tests shall be allowed to be taken during this time. The Testing Center shall be able to determine the period of inactivity.

2.1.8.	Site Adaptation Requirements
  In the case of the installation of a satellite testing center, all test results, logging, actions, and problems must be reported and logged in the main testing center system located in the testing center.

2.2.	 Product Functions
+Electronic test administration (including serving of computers)
+Paper test administration (including printing of tests)
+System shall monitor booklet number selections.
    -Track test booklets in order stop cheating and eliminate re-printing of booklets.
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)
+System shall scan testing center equipment to provide checkin and checkout capabilities.
    -Store scanned equipment information in an internal database.

2.3.	 User Characteristics

2.4.	 Constraints
The system shall perform at 100% efficiency for storage and delivery of test scores to teachers and students. (This doesn’t make sense. Possibly… The system shall guarantee accurate storage and delivery of test scores.) 
The project shall be written in a language which is currently taught at BYU-I. This will allow students and faculty to maintain the system.
The system needs to interface with I-Learn, Jenzebar, and the Scantron device. I-Learn provides the online  testing environment for the current system. The Scantron device reads and evaluates the score sheets given for paper tests. Jenzebar is the governing system for the BYU-I campus and is used to retrieve and store student information.
The system shall be available for use through a web interface. This will allow for system access from any location within the IP domain of BYU-I.

2.5.	 Assumptions and Dependencies
The different systems that are assumed to be operational outside of this project are as follows:
+ Windows OS - The system will be developed to work with an end system with the Windows Operating System installed.
+ Jenzebar – The system will retrieve the student data from the Jenzebar system.
+ I-Learn – Online tests will be taken through the I-Learn system. Grades will be posted to the I-Learn system as well.
+ Scantron – The Scantron will deliver its information to the system where it will be processed and used for test evaluation.
+ The TV Grade Portal – The screen at the exit of the testing center will be operational to display the results of the students competed tests.
+ Printers – Printers will be available to print paper tests.


2.6.	 Apportioning of requirements
The system will be scalable for use on a mobile device. Currently, the system runs both electronic and paper tests. The electronic testing is run primarily through I-Learn. The goal of the testing center is to completely move to online testing without interfacing with I-Learn.

3.	Specific Requirements (Devyn: Draft) (Jordan: man in middle)  (Chris: Final Review)

3.1.	 External interfaces
+Enable student to view scores and times for past, current and upcoming tests in the testing center
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)
+The system shall provide information about what is required to bring to the testing center.
+The system shall provide information about what is allowed to bring to the testing center.
+The system shall provide information about what is not allowed to bring to the testing center.
+The system shall provide information about what is required to bring to the testing center
+The system shall provide information about the average waiting time before entering the line.

3.2.	 Functions
ATS3.2.001
  REQ:The system shall be able to look up a student (including picture) based on I-Number.
  EX:This provides a form of verification for the testing center staff when a student cannot produce a I-card. 
     This enables the employees to verify that a student is really who they say they are.
ATS3.2.002
  REQ:The system shall provide information about the average waiting time before entering the line using 
  the existing hardware (TV/Monitor).
  EX:This will enable students coming to the Testing Center to know how long the wait will be.
ATS3.2.003
  REQ:System shall be able to show test results as students leave the testing center using the existing
  hardware (TV at testing center exit).
  EX:This will enable students taking auto-graded test to receive immediate test results.
ATS3.2.004
  REQ:Students shall be able to review what they are allowed to bring to their test before arriving 
  at the testing center. 
  EX: After the student logs into ATS in a web browser, they will be able to see scheduled tests and review 
  what they are allowed to bring to the test with them (calculator, note card, dictionary, etc).
ATS3.2.005
  REQ:The System shall interact with I-Learn interfaces to upload grades. 
  EX:Once grades have been entered, ATS will interface with I-Learn so that the teacher and students can see 
  grades within I-Learn.


+Items to be backed up durring the 'period of inactivity' (specified in 3.6)
+The System shall interact with I-Learn interfaces to upload statistics.
    -For a teacher to review for knowledge of the test and it's content.
    -Information can be broken down per user.
+System shall handle multiple testing locations
+System shall allow online testing
+System shall be scalable (ie desktops to mobile and becasue of considerable growth)
+The system shall provide the option to schedule tests.
    -To streamline process and avoid a crowded testing center.
    -To avoid conflicts of testing times.
    -To handle ADA (disabilities) scheduling.
+The system shall provide information about the average waiting time before entering the line.
+The system shall provide information about the average waiting time before entering the line. +The user will be 
  able to check this information in the school website.
System shall allow faculty to submit tests remotely
    -To give teachers the option to change tests after submission.  
    -Less chance for human error with no middle exchange.   
System shall offer metrics for the testing services and teachers
  -What metrics?
System shall time each test.
EXP: Teacher wants to know how much time is needed for tests
System shall return time results to the teacher.
EXP: Teacher wants to know how much time is needed for tests
System shall not require the downloading of any form.
EXP: The submission process is bothersome and requires saving tests then emailing them. The current testing center 
  System does this and the teachers have explicitly requested that it not be this way.
System shall not allow pausing a test.
    -Not allow a user to "save for later" option of a test.
    
3.3.	 Performance requirements
+The system shall support 500 students taking a test at any given time (either electronic or paper)
+The system shall support X number of employee terminals
+System shall handle multiple testing locations
+System shall be scalable (ie desktops to mobile)
System shall allow for last minute changes to the test.
The system shall not allow last minute schedule changes.
EXP: Teachers are dissatisfied with being unable to make last minute changes.
+The user interface shall enable a testing center employee with 1 month of experience to check out a test within 2 min.


3.4.	 Logical database requirements
System shall give immediate access to student test results.
EXP: The teacher wants a quicker turn-around time
System shall display which tests have already been scheduled.
EXP: Wants to be able to see what tests are scheduled when inorder to see when they can do a test
System shall provide notifications about both paper and electronic tests.
EXP: Doesn’t like how the currently notifications are from two different services.
System shall offer multiple options for question formatting
EXP: Teachers want the ability to have a sideways key for multiple choice questions
System shall offer metrics for the testing services and teachers
EXP: Teachers want better stats collection and ways to use it for tests
System shall provide a way to create bubble sheet answers
EXP: Teachers want a bubble sheet software that doesn't have a huge delay and errors
System shall be able to export grades into I-learn.
EXP: This used to be a feature, the teacher would like to be able to do it again.
System shall allow teachers to re-use old test with and edit the tests.
EXP: Teachers want to be able to use old tests, but change wording of questions
System shall show available dates for testing.
EXP: This will allow the teachers to know what dates are already open.
Teacher shall select test dates when submitting tests.
EXP: Teachers are in charge of selecting their own dates
Teachers shall only submit bubble, write on, or computerized tests.
EXP: We don't want anything outside of these tests
System shall provide test submission and test date selection in the same process.
EXP: We want a single system that will allow the submission process to be simplified
Teachers shall be able to create tests in system.
EXP: Teachers will be able to create write on tests in system
System shall provide test creation services.
EXP: Simplify the test creation and submission process

3.5.	 Design constraints
System shall accept PDF forms of tests
EXP: For math based tests, they need to submit PDF's or the symbols of the tests will be changed.

3.5.1.	Standards compliance

3.6.	 Software system attributes
+The system shall be reset at least once a week.
+The system shall restrict tests from being taken durring a period of inactivy. This period of inactivty shall be 
determined by the user. (Typically between closing time of the Testing Center and opening time).

3.6.1.	Reliability
System shall successfully create a test from a single submission.
EXP: Teachers are dissatisfied with amount of times tests needed to be submitted
System shall let any user submit a test in less than 30 minutes.
EXP: They use the services extensively and are satisfied with the time it takes (15 mins or less)
System shall not hinder the proctoring of exams
EXP: Some faculty members doesn’t use the services because they like to control the testing in their class. Also 
  because the environment doesn’t allow them to accomplish their “educational goals”.
System shall provide error checking for required fields in test information form.
EXP: Teachers sometimes miss things, and don't want to run through the whole form to see what box they missed. We need to be able to show them what parts they missed when submitting a test
System shall notify via e-mail of successful test submission to Teachers
EXP: This will allow the testing center and teachers to know that it has been submited.
System shall notify via e-mail of successful Testing Center reservation to Teachers
EXP: This will allow the testing center and teachers to know that it has been reserved.
3.6.2.	Availability
System shall allow for last minute changes.
System shall immediately return possible dates to the user if the desired date is unavailable.
EXP:  Teachers suggested a web app to submit tests and schedule them, due to the back and forth to schedule tests
System shall not hinder the proctoring of exams
EXP: Some faculty members doesn’t use the services because they like to control the testing in their class. Also 
  because the environment doesn’t allow them to accomplish their “educational goals”.
System shall only allow one test per student at a time.
EXP: Teacher wants to know how much time is needed for tests
System shall schedule on a first come first serve basis.
EXP: They would like unlimited space so they can schedule a test whenever they want.
System shall offer reservation services for testing.
EXP: Some teachers don't use the testing center specifically because of scheduling issues during the semester 
  and finals.
System shall allow students to take exams only during their scheduled time
EXP: Students have been given wrong exam at wrong times

3.6.3.	Security
System shall allow for remote proctoring.
   -All student information will be displayed on remote screen for proctor.
System shall notify staff of attempts of cheating.
    -Attempts to open unnecessary programs or features.
System shall allow for designated, non-faculty, persons to review assessments.
EXP: Some teachers doesn’t use the services very frequently because they mostly do writing tests that they like 
  to look over or have their TA do it
System shall allow students to take exams only for classes currently registered for.
EXP: Teachers have had some issues with test previously including, students given wrong exam, used wrong key to 
  grade, or proctors having hard time following instructions
System shall only allow one test per student at a time.
EXP: Teachers would like to effectively track how long it takes a student to take a test, if a student takes more 
  than one test at a time, it is hard to gauge how long the test actually takes.

3.6.4.	Maintainability
The system shall be programmed in a language taught at BYU-Idaho.
  EXP: The last system was programmed in PIC Basic and it was extremly hard to maintain. The reasons it was 
  hard to maintain was the fact that not very many people know PIC Basic. For this reason, we need the system to 
  built in a language that is understood by the students/faculty of BYU-Idaho. When the language is understood by these 
  individuals it can be more easily maintained, in the future.

3.6.5.	Portability
System shall allow to have temporary Testing Center areas to be set up in labs.
      -During final times to convert labs into computer testing areas.

3.7.	 Organizing the specific requirements

3.7.1.	System mode

3.7.2.	User class

3.7.3.	Objects

3.7.4.	Feature

3.7.5.	Stimulus

3.7.6.	Response

3.7.7.	Functional hierarchy

3.7.8.	Additional comments

4.	Appendixes

4.1.	Appendix A: Employees
  
  4.1.1 Questionnaires
  
  4.1.2 Summary

4.2.	Appendix B: Faculty

  4.2.1 Questionnaires

  4.2.2 Summary
  
4.3   Appendix C: Students
  
  4.3.1 Questionnaires
  
  4.3.2 Summary
