1.	Introduction

1.1.	 Purpose (Devyn) (Adam: Review) (Chris: Final Review)

1.1.1.	Delineate the purpose of the SRS

1.1.2.	Specify the intended audience

1.2.	 Scope (Devyn) (Adam: Review)

1.2.1.	Identify Software to be produced by name

1.2.2.	Explain what the software product will and will not do

1.2.3.	Application of the software

1.2.3.1.	Relevant benefits

1.2.3.2.	Objectives

1.2.3.3.	Goals
1.3.	 Definitions, Acronyms and Abbreviations (All)
FERPA – The Family Educational Rights and Privacy Act of 1974.
I-Number – 
I-Learn -

1.4.	 References (All)
FERPA - http://www.byui.edu/student-records/ferpa/family-education-rights-and-privacy-act-%28ferpa%29
Testing Center - http://www.byui.edu/testing-services
I-Learn API - ?
Jenzabar API - http://www.franciscan.edu/imagebase/oit/docid1510/Web%20Administration%20Configuration%20Guide.pdf

1.5.	 Overview (Adam)
This document gives an overview of the functionality of the Testing Center Software. 
It describes the requirements needed for the development process. 

1.5.1.	What the rest of the SRS contains?
The next chapter, Overall Description section, gives an overview of the product.
Which establishes a context for the technical requirements which are noted in section 3, Requirement Specifications.
Section 3, Requirements Specifications, is written to explain the details of the functionality of this product.
Both sections are written to describe the Testing Center Software in its entirety.

1.5.2.	How the SRS is organized?
This document is organized by explaining the overall description of the software, 
more specifically the system interfaces, the user interfaces,
hardware interfaces, software interfaces, and communication interfaces.
Product Perspective
  Product Functions
  User Characteristics
  Constraints
Specific Requirements
  External interfaces
  Functions
  Performance requirements

2.	Overall description (Devyn: Draft) (Jordan: man in middle) (Chris: Final Review)

2.1.	 Product Perspective

2.1.1.	System interfaces
+The system shall be able to look up a student (including picture) based on I-Number. The interface here is to the existing school systems.
    -Helps speed up checkout and verification to avoid cheating.
+The system shall provide music in one separate room of testing. (How do they do this currently? A cd player? If so do they want to be able to turn on/off music from the testing center system?) The interface here is to the existing speaker in the wall, if applicable.
+if deemed appropriate the system shall provide music to the line as well.
+System shall be scalable (ie desktops to mobile)
+System shall be maintainable.
    -Written in a modern and popular language with proper documentation.

2.1.2.	User interfaces
+Upon error the User will be informed of the error and a current testing center employee (who is working at a computer).
+The student tacking a test shall not be able to go to any other program on their testing device (electronic).
+The user interface shall enable a testing center employee with 1 month of experience to check out a test within 2 min.
    -Student staff may only work for a semester with limited to no previous computer skills.
+System shall be scalable (ie desktops to mobile)

2.1.3.	Hardware interfaces
+The system shall provide information about the average waiting time before entering the line using a monitor (TV).
+There shall be a device for entering the student’s I-Number, connected via USB to a Testing center Employee’s work station/computer.
+System shall handle multiple testing locations
+System shall be scalable (ie desktops to mobile)
+System shall be able to show test results as students leave the testing center
+System shall be able to track paper tests
    -It will take time for all staff to convert to digatal tests.

2.1.4.	Software interfaces
+Students shall be able to review scheduled tests and what they are allowed to bring to their test before arriving at the testing center. The interface here is to a web browser.
+The System shall interact with I-Learn interfaces to upload grades. 
+The System shall interact with I-Learn interfaces to upload statistics.
+System shall handle multiple testing locations
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)
+The system shall provide the option to schedule tests.
    -To streamline process and avoid a crowded testing center.
    -To handle ADA (disablities) scheduling.
+The system shall provide information about the average waiting time before entering the line.
+The system shall provide information about the average waiting time before entering the line. +The user will be able to check this information in the school website.
System shall allow users to submit tests remotely
  EXP: Some of the staff likes the current scout program for online submissions.
System shall offer metrics for the testing services and teachers
  EXP: Some teachers would like more in depth metrics on the tests taken.
System shall time each test.
  EXP: Teachers like to see how long it takes students to finish their test.
System shall return time results to the teacher.
  EXP: Teachers like to see how long it takes students to finish their test.
System shall not require the downloading of any form.
  EXP: The submission process is bothersome and requires saving tests then emailing them.

2.1.5.	Communication interfaces
+Any HTML content served shall be compliant with HTTP protical 1.1
+System shall allow online testing
+System shall allow for studnets to specify how test results are delivered

2.1.6.	Memory constraints

2.1.7.	Operations

2.1.8.	Site adaption requirements

+The system shall turn off and turn on by times specified by the Testing Center Employee’s

2.2.	 Product Functions
+electronic tests (including serving of computers)
+Paper tests (including printing of tests)
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)

2.3.	 User Characteristics

2.4.	 Constraints

2.5.	 Assumptions and Dependencies

2.6.	 Apportioning of requirements

3.	Specific Requirements (Devyn: Draft) (Jordan: man in middle)  (Chris: Final Review)

3.1.	 External interfaces
+Enable student to view scores and times for past, current and upcoming tests in the testing center
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)
+The system shall provide information about what is required to bring to the testing center.
+The system shall provide information about what is allowed to bring to the testing center.
+The system shall provide information about what is not allowed to bring to the testing center.
+The system shall provide information about what is required to bring to the testing center
+The system shall provide information about the average waiting time before entering the line.

3.2.	 Functions

3.3.	 Performance requirements
+The system shall support 500 students taking a test at any given time (either ezerolectronic or paper)
+The system shall support X number of employee terminals
+System shall handle multiple testing locations
+System shall be scalable (ie desktops to mobile)
System shall allow for last minute changes.
  EXP: The teachers are not satisfied that they are unable to make important last minute changes to tests.

3.4.	 Logical database requirements
System shall give immediate access to student test results.
  EXP: The teachers wants a quicker turn-around time.
System shall display which tests have already been scheduled.
  EXP: The teachers want to be able to see what tests are scheduled and when.
System shall provide notifications about both paper and electronic tests.
  EXP: The teachers don't like how the current notifications are from two different services.
System shall offer multiple options for question formatting
  EXP: The Teachers like the testing services, but they want the ability to have a sideways key for 
       multiple choice questions.
System shall offer metrics for the testing services and teachers
System shall provide a way to create bubble sheet answers
  EXP: Teachers woul like to create answers for the bubble sheets.
3.5.	 Design constraints

3.5.1.	Standards compliance

3.6.	 Software system attributes

3.6.1.	Reliability
System shall successfully create a test from a single submission.
  EXP: Teachers are dissatisfied with amount of times tests needed to be submitted. They want to be able to
  submit it only once.
System shall let any user create a test in less than 30 minutes.
System shall not hinder the proctoring of exams
  EXP: Many teachers love the proctored environment and they don't want to loose that with a new system.
3.6.2.	Availability
System shall allow for last minute changes.
  EXP: The teachers are not satisfied that they are unable to make important last minute changes to tests.
System shall immediately return possible dates to the user if the desired date is unavailable.
  EXP: With the current system, it often takes teachers a long time to hear back from the testing center that
       their chosen time in unavailable. If the chosen date is unavailable, the teachers would like to know 
       immediately so they can adjust their scheduals if needed.
System shall not hinder the proctoring of exams
System shall only allow one test per student at a time.
  EXP: Teachers like to know how long it takes a student to complete their test, but if the students are taking 
       multiple tests at once they aren't able to recieve that information.
System shall schedule on a first come first serve basis.
  EXP: This would allow for the system to immediately inform the user if the desired date is unavailable.
System shall offer reservation services for testing.
  EXP: Some teachers avoid using the testing center because it's hard for their students to make it to tests
       with their current schedual. Allowing the students to reserve a time for testing will make it easier
       for students with tight schedual to take the test.
System shall allow students to take exams only during their scheduled time
  EXP: There have been cases where students have accedentally recieved future tests that were not schedualed to be
       offered for a few weeks.
3.6.3.	Security
System shall allow for remote proctoring.
  EXP: Some faculty don't use the testing services because they like to control the testing in their own classroom.
System shall allow for designated, non-faculty, persons to review assessments.
  EXP: Some teachers with write on tests would like their Teacher Aids to be able to grade and correct the tests.
       With the current system, non-faculty persons are unable to access the tests.
System shall allow students to take exams only for classes currently registered for.
  EXP: In the past there have been instances where students were given the wrong exam. There have also been instances
       where the wrong key was used to grade the tests, or proctors were having a hard time following the instructions.
System shall only allow one test per student at a time.
3.6.4.	Maintainability
The system shall be programmed in a language taught at BYU-Idaho.
  EXP: The last system was programmed in PIC Basic and it was extremly hard to maintain. The reasons it was 
  hard to maintain was the fact that not very many people know PIC Basic. For this reason, we need the system to 
  built in a language that is understood by the students/faculty of BYU-Idaho. When the language is understood by these 
  individuals it can be more easily maintained, in the future.

3.6.5.	Portability

3.7.	 Organizing the specific requirements

3.7.1.	System mode

3.7.2.	User class

3.7.3.	Objects

3.7.4.	Feature

3.7.5.	Stimulus

3.7.6.	Response

3.7.7.	Functional hierarchy

3.7.8.	Additional comments

4.	Appendixes

4.1.	Appendix A: Employees
  
  4.1.1 Questionnaires
  
  4.1.2 Summary

4.2.	Appendix B: Faculty

  4.2.1 Questionnaires

  4.2.2 Summary
  
4.3   Appendix C: Students
  
  4.3.1 Questionnaires
  
  4.3.2 Summary
