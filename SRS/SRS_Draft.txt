1.	Introduction

1.1.	 Purpose (Devyn) (Adam: Review) (Chris: Final Review

1.1.1.	Delineate the purpose of the SRS
The purpose of the SRS is to set forth a specification for the Testing Center Software.  The old system is antiquated and now needs to be replaced.
1.1.2.	Specify the intended audience
The audience is Kevin Twitchell as the Software Engineering professor as well as the Testing Center Administration.
1.2.	 Scope (Devyn) (Adam: Review)

1.2.1.	Identify Software to be produced by name
The software suite we will be producing will be called Automated Testing Service (ATS)
1.2.2.	Explain what the software product will and will not do
ATS will facilitate the entry of and distribution of tests.  This will consist of:
-Faculty entry of tests
-Manage test dates, availability, and closing times
-Retrieve student data from Jenzabar
-Student check-in
-Distribution and completion of tests
-Grading of tests and display of those grades in a manner consistent with FERPA
-Entry of grades into the BYU-I iLearn gradebook
ATS will not:
-Grade write on (electronic or handwritten) short answer questions.
1.2.3.	Application of the software

1.2.3.1.	Relevant benefits

1.2.3.2.	Objectives

1.2.3.3.	Goals
1.3.	 Definitions, Acronyms and Abbreviations (All)
ATS - Automated Testing Service, the software suite we will develop
SRS - Software Requirements Specification
FERPA – The Family Educational Rights and Privacy Act of 1974.
I-Number – 
I-Learn -

1.4.	 References (All)
FERPA - http://www.byui.edu/student-records/ferpa/family-education-rights-and-privacy-act-%28ferpa%29
Testing Center - http://www.byui.edu/testing-services
I-Learn API - ?
Jenzabar API - http://www.franciscan.edu/imagebase/oit/docid1510/Web%20Administration%20Configuration%20Guide.pdf

1.5.	 Overview (Adam)
This document gives an overview of the functionality of the Testing Center Software. 
It describes the requirements needed for the development process. 

1.5.1.	What the rest of the SRS contains?
The next chapter, Overall Description section, gives an overview of the product.
Which establishes a context for the technical requirements which are noted in section 3, Requirement Specifications.
Section 3, Requirements Specifications, is written to explain the details of the functionality of this product.
Both sections are written to describe the Testing Center Software in its entirety.

1.5.2.	How the SRS is organized?
This document is organized by explaining the overall description of the software, 
more specifically the system interfaces, the user interfaces,
hardware interfaces, software interfaces, and communication interfaces.
Product Perspective
  Product Functions
  User Characteristics
  Constraints
Specific Requirements
  External interfaces
  Functions
  Performance requirements

2.	Overall description (Devyn: Draft) (Jordan: man in middle) (Chris: Final Review)

2.1.	 Product Perspective
In this section we give an overview of the testing center system. This includes it's interfaces, constraints 
  and assumptions.
2.1.1.	System interfaces
  The testing center system will interface with existing school systems. These systems include I-Learn and 
Jensebar. The system shall interface with I-learn to enable teachers to edit and upload test scores. It shall 
also allow the students to view their test scores. The teacher will have the option to make scores visible to 
the student or hide them. The system must interface with jensebar to retrieve existing student data including 
the student I-number, name, date of birth, class schedule and student picture. This data will be used for 
various verifications and system loggin as explained in section 3 of this document.
  The testing Center system must be scalable and allow for future growth. Interfaces for mobile and desktop 
applications must be provided. This enables the testing center system to add new technology as it is 
introduced. See section 3.1 for further information.


+The system shall provide music in one separate room of testing. (How do they do this currently? A cd player? 
  If so do they want to be able to turn on/off music from the testing center system?) The interface here is 
  to the existing speaker in the wall, if applicable.
+if deemed appropriate the system shall provide music to the line as well.
+System shall be maintainable.
    -Written in a modern and popular language with proper documentation.


2.1.2.	User interfaces
+Upon error the User will be informed of the error and a current testing center employee (who is working at a computer).
+The student taking a test shall not be able to go to any other program on their testing device (electronic).
+The user interface shall enable a testing center employee with 1 month of experience to check out a test within 2 min.
    -Student staff may only work for a semester with limited to no previous computer skills.
+System shall be scalable (ie desktops to mobile)

2.1.3.	Hardware interfaces
+The system shall provide information about the average waiting time before entering the line using a monitor (TV).
+There shall be a device for entering the student’s I-Number, connected via USB to a Testing center Employee’s
  work station/computer.
+System shall handle multiple testing locations
+System shall be scalable (ie desktops to mobile)
+System shall be able to show test results as students leave the testing center
+System shall be able to track paper tests
    -It will take time for all staff to convert to digital tests.

2.1.4.	Software interfaces
+Students shall be able to review scheduled tests and what they are allowed to bring to their test before arriving 
  at the testing center. The interface here is to a web browser.
+The System shall interact with I-Learn interfaces to upload grades. 
+The System shall interact with I-Learn interfaces to upload statistics.
    -For a teacher to review for knowledge of the test and it's content.
    -Information can be broken down per user.
+System shall handle multiple testing locations
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)
+The system shall provide the option to schedule tests.
    -To streamline process and avoid a crowded testing center.
    -To avoid conflicts of testing times.
    -To handle ADA (disabilities) scheduling.
+The system shall provide information about the average waiting time before entering the line.
+The system shall provide information about the average waiting time before entering the line. +The user will be 
  able to check this information in the school website.
System shall allow faculty to submit tests remotely
    -To give teachers the option to change tests after submission.  
    -Less chance for human error with no middle exchange.   
System shall offer metrics for the testing services and teachers
System shall time each test.
EXP: Teacher wants to know how much time is needed for tests
System shall return time results to the teacher.
EXP: Teacher wants to know how much time is needed for tests
System shall not require the downloading of any form.
EXP: The submission process is bothersome and requires saving tests then emailing them.
System shall not allow pausing a test.
    -Not allow a user to "save for later" option of a test.

2.1.5.	Communication interfaces
+Any HTML content served shall be compliant with HTTP protical 1.1
+System shall allow online testing
+System shall allow for studnets to specify how test results are delivered

2.1.6.	Memory constraints

2.1.7.	Operations

2.1.8.	Site adaption requirements

+The system shall turn off and turn on by times specified by the Testing Center Employee’s

2.2.	 Product Functions
+electronic tests (including serving of computers)
+Paper tests (including printing of tests)
+System shall monitor booklet number selections.
    -Track test booklets to save on printing to many and stop cheating.
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)
+System shall scan testing center equipment in and out.
    -Scan equipment into a database that is in the system.


2.3.	 User Characteristics

2.4.	 Constraints
The system shall preform at 100% efficiency for storage and delivery of test scores to teachers and students. (I’m not sure what numbers we should use for reliability) 
The project must be written in a language currently being taught at BYU-I. This will allow for students and faculty to maintain the system.
The system needs to interface with both I-Learn, Jenzebar, and the Scantron device. I-Learn provides the online testing environment for the current system. The Scantron device reads in and evaluates the score sheets given for most paper tests. Jenzebar is the governing system of the BYU-I campus and is used to retrieve and store student information.
The system must be available for use through a web interface. This will allow for system access from any location within the IP domain of BYU-I.

2.5.	 Assumptions and Dependencies
A number of factors that may affect the requirements specified in the SRS include:
- the server
- the operating system
- the browser
- the printers
- the scantron
- the workstations
- Jenzabar
- I-Learn

2.6.	 Apportioning of requirements
As of now the system runs both paper and online tests. The online testing is run primarily through I-Learn. Eventually the goal of the testing center is to move completely too online testing without interfacing with I-Learn. The system will also need to be scalable for use on a mobile devise.

3.	Specific Requirements (Devyn: Draft) (Jordan: man in middle)  (Chris: Final Review)

3.1.	 External interfaces
+Enable student to view scores and times for past, current and upcoming tests in the testing center
+System shall allow online testing
+System shall be scalable (ie desktops to mobile)
+The system shall provide information about what is required to bring to the testing center.
+The system shall provide information about what is allowed to bring to the testing center.
+The system shall provide information about what is not allowed to bring to the testing center.
+The system shall provide information about what is required to bring to the testing center
+The system shall provide information about the average waiting time before entering the line.

3.2.	 Functions
+The system shall be able to look up a student (including picture) based on I-Number.
    -Helps speed up checkout and verification to avoid cheating.
    EX: This provides a form of verification for the testing center staff when a student cannot produce a I-card. 
      This enables the employees to verify that a student is really who they say they are.

3.3.	 Performance requirements
+The system shall support 500 students taking a test at any given time (either electronic or paper)
+The system shall support X number of employee terminals
+System shall handle multiple testing locations
+System shall be scalable (ie desktops to mobile)
System shall allow for last minute changes.
EXP: Teachers are dissatisfied with being unable to make last minute changes.

3.4.	 Logical database requirements
System shall give immediate access to student test results.
EXP: The teacher wants a quicker turn-around time
System shall display which tests have already been scheduled.
EXP: Wants to be able to see what tests are scheduled when inorder to see when they can do a test
System shall provide notifications about both paper and electronic tests.
EXP: Doesn’t like how the currently notifications are from two different services.
System shall offer multiple options for question formatting
EXP: Teachers want the ability to have a sideways key for multiple choice questions
System shall offer metrics for the testing services and teachers
EXP: Teachers want better stats collection and ways to use it for tests
System shall provide a way to create bubble sheet answers
EXP: Teachers want a bubble sheet software that doesn't have a huge delay and errors
System shall be able to export grades into I-learn.
EXP: This used to be a feature, the teacher would like to be able to do it again.

3.5.	 Design constraints

3.5.1.	Standards compliance

3.6.	 Software system attributes

3.6.1.	Reliability
System shall successfully create a test from a single submission.
EXP: Teachers are dissatisfied with amount of times tests needed to be submitted
System shall let any user create a test in less than 30 minutes.
EXP: They use the services extensively and are satisfied with the time it takes (15 mins or less)
System shall not hinder the proctoring of exams
EXP: Some faculty members doesn’t use the services because they like to control the testing in their class. Also 
  because the environment doesn’t allow them to accomplish their “educational goals”.
3.6.2.	Availability
System shall allow for last minute changes.
System shall immediately return possible dates to the user if the desired date is unavailable.
EXP:  Teachers suggested a web app to submit tests and schedule them, due to the back and forth to schedule tests
System shall not hinder the proctoring of exams
EXP: Some faculty members doesn’t use the services because they like to control the testing in their class. Also 
  because the environment doesn’t allow them to accomplish their “educational goals”.
System shall only allow one test per student at a time.
EXP: Teacher wants to know how much time is needed for tests
System shall schedule on a first come first serve basis.
EXP: They would like unlimited space so they can schedule a test whenever they want.
System shall offer reservation services for testing.
EXP: Some teachers don't use the testing center specifically because of scheduling issues during the semester 
  and finals.
System shall allow students to take exams only during their scheduled time
EXP: Students have been given wrong exam at wrong times
3.6.3.	Security
System shall allow for remote proctoring.
   -All student information will be displayed on remote screen for proctor.
System shall notify staff of attempts of cheating.
    -Attempts to open unnecessary programs or features.
System shall allow for designated, non-faculty, persons to review assessments.
EXP: Some teachers doesn’t use the services very frequently because they mostly do writing tests that they like 
  to look over or have their TA do it
System shall allow students to take exams only for classes currently registered for.
EXP: Teachers have had some issues with test previously including, students given wrong exam, used wrong key to 
  grade, or proctors having hard time following instructions
System shall only allow one test per student at a time.
EXP: Teachers would like to effectively track how long it takes a student to take a test, if a student takes more 
  than one test at a time, it is hard to gauge how long the test actually takes.
3.6.4.	Maintainability
The system shall be programmed in a language taught at BYU-Idaho.
  EXP: The last system was programmed in PIC Basic and it was extremly hard to maintain. The reasons it was 
  hard to maintain was the fact that not very many people know PIC Basic. For this reason, we need the system to 
  built in a language that is understood by the students/faculty of BYU-Idaho. When the language is understood by these 
  individuals it can be more easily maintained, in the future.

3.6.5.	Portability
System shall allow to have temporary Testing Center areas to be set up in labs.
      -During final times to convert labs into computer testing areas.
3.7.	 Organizing the specific requirements

3.7.1.	System mode

3.7.2.	User class

3.7.3.	Objects

3.7.4.	Feature

3.7.5.	Stimulus

3.7.6.	Response

3.7.7.	Functional hierarchy

3.7.8.	Additional comments

4.	Appendixes

4.1.	Appendix A: Employees
  
  4.1.1 Questionnaires
  
  4.1.2 Summary

4.2.	Appendix B: Faculty

  4.2.1 Questionnaires

  4.2.2 Summary
  
4.3   Appendix C: Students
  
  4.3.1 Questionnaires
  
  4.3.2 Summary
